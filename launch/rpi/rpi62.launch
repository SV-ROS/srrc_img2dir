<!-- Starts from a raspi board raspicam and arbotix nodes on a raspbery pi board --> 
<launch>
    <arg name="address_byte" default="62" />
    <arg name="caminfo_file" default="rpi_narrow.yaml" />

    <arg name="machine_name"       default="rpi_$(arg address_byte)" />
    <arg name="image_topic_name"   default="/$(arg machine_name)/image_raw/compressed" />
    <arg name="caminfo_topic_name" default="/$(arg machine_name)/camera_info" />


    <machine name="$(arg machine_name)"
       address="192.168.0.$(arg address_byte)"
       user="ubuntu"
       password="ubuntu"
       default="false"
    />

    <!-- start arbotix motors on the raspi board -->
    <node machine="$(arg machine_name)" name="arbotix" pkg="arbotix_python" type="arbotix_driver" clear_params="true" output="screen">
      <rosparam file="$(find srrc_bringup)/config/max/head_camera_dynamixels.yaml" command="load" />
      <param name="sim" value="false" />
    </node>
  
    <!-- start the raspicam service and image publisher on the raspi board -->
    <node machine="$(arg machine_name)" name="$(arg machine_name)" pkg="raspicam" type="raspicam_node" respawn="true" output="screen">
        <remap from="/$(arg machine_name)/camera/image/compressed" to="$(arg image_topic_name)" />
        <remap from="/$(arg machine_name)/camera/camera_info" to="$(arg caminfo_topic_name)" />
        <param name="camera_info_url" value="package://srrc_vision/config/camera_calibration/$(arg caminfo_file)" />
        <param name="camera_name" value="$(arg machine_name)_camera" />
        <param name="camera_frame_id" value="$(arg machine_name)_optical_frame" />
	<param name="framerate" value="5" />
        <!--
           values for the srrc_publishing_mode parameter:
           SrrcPublish_Always = 0, //: publish images always when the camera is on (default)
           SrrcPublish_Wait   = 1, //: wait for request to publish only one image and then remain in this waiting mode
           SrrcPublish_Once   = 2  //: publish one image and then switch in this waiting mode
        -->
	<!--param name="srrc_publishing_mode" value="1" /-->
    </node>

    <!-- start capture -->
    <node pkg="rosservice" type="rosservice" name="call_start_capture" args="call --wait /$(arg machine_name)/camera/start_capture"/>
    
</launch>
